# MySQL 설정
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # DB Source
    url: jdbc:mysql://localhost:3306/youBeMyCollegue?useSSL=false&allowPublicKeyRetrieval=true
    # DB username
    username: root
    # DB password
    password: dkemf21518@
  jpa:
    properties:
      hibernate:
        ddl-auto: update
        format_sql: true
        default_batch_fetch_size: 100

  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id: 813997436894-ku4dluti2fm5toa1jms6nf6uiisj655r.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile


          # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
          # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
          naver:
            client-id: YVebsra25yWCHJ1YobLn
            client-secret: hi97CQy9I6
            scope:
              - name
              - email
              - profile_image
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.

logging:
  level:
    org.hibernate.SQL: debug

server:
  port: 8081